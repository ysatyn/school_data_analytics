import pandas as pd  # –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ pandas –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ (DataFrame)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø—Ü–∏—é, —á—Ç–æ–±—ã –≤ –±—É–¥—É—â–µ–º Pandas —è–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–ª –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º —Ç–∏–ø–æ–≤
pd.set_option('future.no_silent_downcasting', True)

# –ó–∞–≥—Ä—É–∂–∞–µ–º CSV-—Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –æ–ø—Ä–æ—Å–∞ –≤ —Ç–∞–±–ª–∏—Ü—É DataFrame
df = pd.read_csv("–¢–µ—Å—Ç 10 –∫–ª–∞—Å—Å–æ–≤ - –û—Ç–≤–µ—Ç—ã –Ω–∞ —Ñ–æ—Ä–º—É.csv")

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –æ–ø—Ä–æ—Å–µ
subjects = [
    "–ê–ª–≥–µ–±—Ä–∞", "–ì–µ–æ–º–µ—Ç—Ä–∏—è", "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–ò—Å—Ç–æ—Ä–∏—è",
    "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫", "–í—Ç–æ—Ä–æ–π –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–§–∏–∑–∏–∫–∞", "–•–∏–º–∏—è", "–ë–∏–æ–ª–æ–≥–∏—è",
    "–û–ë–ó–†", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞", "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ"
]

# –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–æ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –æ—Ç 1 –¥–æ 5
grade_map = {
    "–Ø –≤—Å–µ–≥–¥–∞ —É—á—É—Å—å –ø–ª–æ—Ö–æ": 1, "–Ø —á–∞—â–µ –≤—Å–µ–≥–æ —É—á—É—Å—å –ø–ª–æ—Ö–æ": 2,
    "–Ø –∏–Ω–æ–≥–¥–∞ —É—á—É—Å—å —Ö–æ—Ä–æ—à–æ, –∏–Ω–æ–≥–¥–∞ –ø–ª–æ—Ö–æ": 3, "–Ø —á–∞—â–µ –≤—Å–µ–≥–æ —É—á—É—Å—å —Ö–æ—Ä–æ—à–æ": 4,
    "–Ø –≤—Å–µ–≥–¥–∞ —É—á—É—Å—å —Ö–æ—Ä–æ—à–æ": 5
}

# –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–æ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –ø—Ä–µ–¥–º–µ—Ç—É —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –æ—Ç 1 –¥–æ 5
interest_map = {
    "–ú–Ω–µ –≤—Å–µ–≥–¥–∞ —Å–∫—É—á–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 1, "–ú–Ω–µ —á–∞—â–µ –≤—Å–µ–≥–æ –±—ã–≤–∞–µ—Ç —Å–∫—É—á–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 2,
    "–ú–Ω–µ –∏–Ω–æ–≥–¥–∞ —Å–∫—É—á–Ω–æ, –∏–Ω–æ–≥–¥–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 3, "–ú–Ω–µ —á–∞—Å—Ç–æ –±—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 4,
    "–ú–Ω–µ –≤—Å–µ–≥–¥–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 5
}

# –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–æ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º—Ñ–æ—Ä—Ç –Ω–∞ —É—Ä–æ–∫–µ —Å —á–∏—Å–ª–∞–º–∏ –æ—Ç 1 –¥–æ 5
comfort_map = {
    "–Ø –≤—Å–µ–≥–¥–∞ –∏—Å–ø—ã—Ç—ã–≤–∞—é –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç –Ω–∞ —É—Ä–æ–∫–µ (—Ç—Ä–µ–≤–æ–≥—É, —Å—Ç—Ä–∞—Ö, –≥—Ä—É—Å—Ç—å)": 1,
    "–Ø —á–∞—Å—Ç–æ –∏—Å–ø—ã—Ç—ã–≤–∞—é –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç –Ω–∞ —É—Ä–æ–∫–µ (—Ç—Ä–µ–≤–æ–≥—É, —Å—Ç—Ä–∞—Ö, –≥—Ä—É—Å—Ç—å)": 2,
    "–ú–Ω–µ –∏–Ω–æ–≥–¥–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ, –∏–Ω–æ–≥–¥–∞ —è –∏—Å–ø—ã—Ç—ã–≤–∞—é –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç (—Ç—Ä–µ–≤–æ–≥—É, —Å—Ç—Ä–∞—Ö, –≥—Ä—É—Å—Ç—å)": 3,
    "–ú–Ω–µ —á–∞—â–µ –≤—Å–µ–≥–æ –±—ã–≤–∞–µ—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 4,
    "–ú–Ω–µ –≤—Å–µ–≥–¥–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 5
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ —É—á–µ–Ω–∏–∫–æ–≤ –≤—ã–±—Ä–∞–ª–æ –∫–∞–∂–¥—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
def format_distribution(df_class, column, options):
    total = len(df_class)  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤
    counts = df_class[column].value_counts()  # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤ –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ —Å –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
    return [f"\"{opt}\" ‚Äî {round(counts.get(opt, 0)/total*100)}%" for opt in options]

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–¥–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –≤ –æ–¥–Ω–æ–º –∫–ª–∞—Å—Å–µ
def subject_in_class(cls, subject):
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ –Ω—É–∂–Ω–æ–º—É –∫–ª–∞—Å—Å—É (–±–µ–∑ —É—á—ë—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞)
    df_cls = df[df["–ú–æ–π –∫–ª–∞—Å—Å"].str.lower() == cls.lower()]
    if df_cls.empty:
        print("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–ª–∞—Å—Å—É.")
        return

    print(f"\nüìò {subject.upper()} –≤ –∫–ª–∞—Å—Å–µ {cls}")

    # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ (—É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å, –∏–Ω—Ç–µ—Ä–µ—Å, –∫–æ–º—Ñ–æ—Ä—Ç) –∏—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–æ–ª–æ–Ω–∫—É –∏ –≤—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    for name, mapping in [("–ö–∞–∫ —è —É—á—É—Å—å?", grade_map), ("–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ª–∏ –º–Ω–µ —É—á–∏—Ç—å—Å—è?", interest_map), ("–ö–∞–∫ —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–∞ —É—Ä–æ–∫–µ?", comfort_map)]:
        # –ò—â–µ–º –∫–æ–ª–æ–Ω–∫—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∏ –Ω—É–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –∏ –ø—Ä–µ–¥–º–µ—Ç
        col = next((c for c in df.columns if name in c and subject.lower() in c.lower()), None)
        if col:
            # –í—ã–≤–æ–¥–∏–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤
            print(f"\n{name}:\n" + "\n".join(format_distribution(df_cls, col, mapping.keys())))

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç—á—ë—Ç –ø–æ –≤—Å–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞–º –≤ –æ–¥–Ω–æ–º –∫–ª–∞—Å—Å–µ
def class_report(cls):
    for subj in subjects:
        subject_in_class(cls, subj)

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç—á—ë—Ç –ø–æ –æ–¥–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –≤–æ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–∞—Ö
def subject_report(subj):
    for cls in df["–ú–æ–π –∫–ª–∞—Å—Å"].unique():
        subject_in_class(cls, subj)

# –ì–ª–∞–≤–Ω—ã–π –æ—Ç—á—ë—Ç: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¢–æ–ø-3 –∏ –ê–Ω—Ç–∏-—Ç–æ–ø-3 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ –≤—Å–µ–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º (—É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å, –∏–Ω—Ç–µ—Ä–µ—Å, –∫–æ–º—Ñ–æ—Ä—Ç)
def main_report():
    print("===== –û–±—â–∏–π –æ—Ç—á—ë—Ç –ø–æ –≤—Å–µ–º –∫–ª–∞—Å—Å–∞–º =====")
    for cls in df["–ú–æ–π –∫–ª–∞—Å—Å"].unique():  # –î–ª—è –∫–∞–∂–¥–æ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
        df_cls = df[df["–ú–æ–π –∫–ª–∞—Å—Å"] == cls]  # –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —ç—Ç–æ–º—É –∫–ª–∞—Å—Å—É
        print(f"\nüìö –ö–ª–∞—Å—Å {cls}")

        # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è (—É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å, –∏–Ω—Ç–µ—Ä–µ—Å, –∫–æ–º—Ñ–æ—Ä—Ç)
        for name, mapping, title in [
            ("–ö–∞–∫ —è —É—á—É—Å—å?", grade_map, "–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏"),
            ("–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ª–∏ –º–Ω–µ —É—á–∏—Ç—å—Å—è?", interest_map, "–ò–Ω—Ç–µ—Ä–µ—Å—É"),
            ("–ö–∞–∫ —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–∞ —É—Ä–æ–∫–µ?", comfort_map, "–ö–æ–º—Ñ–æ—Ä—Ç—É")
        ]:
            # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–æ–ª–æ–Ω–∫–∏, –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫ –Ω—É–∂–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É
            cols = [c for c in df.columns if name in c]
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç—ã –≤ —á–∏—Å–ª–∞ –∏ —Å—á–∏—Ç–∞–µ–º —Å—Ä–µ–¥–Ω–µ–µ –ø–æ –∫–∞–∂–¥–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É
            avg = df_cls[cols].replace(mapping).infer_objects(copy=False).apply(pd.to_numeric, errors='coerce').mean().sort_values(ascending=False)

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º 3 –ø—Ä–µ–¥–º–µ—Ç–∞ —Å —Å–∞–º—ã–º –≤—ã—Å–æ–∫–∏–º –∏ —Å–∞–º—ã–º –Ω–∏–∑–∫–∏–º —Å—Ä–µ–¥–Ω–∏–º –±–∞–ª–ª–æ–º
            print(f"\n‚≠ê –¢–û–ü-3 –ø–æ {title}:\n" + "\n".join(avg.head(3).index.str.extract(r"\[(.*?)\]")[0]))
            print(f"üîª –ê–ù–¢–ò-–¢–û–ü-3 –ø–æ {title}:\n" + "\n".join(avg.tail(3).index.str.extract(r"\[(.*?)\]")[0]))

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç—á—ë—Ç –ø–æ –≤—Å–µ–º –∫–ª–∞—Å—Å–∞–º
main_report()

# –¶–∏–∫–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–æ–≤ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É
while True:
    # –ü–æ–ª—É—á–∞–µ–º –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    inp = input("\n–í–≤–µ–¥–∏—Ç–µ –∫–ª–∞—Å—Å, –ø—Ä–µ–¥–º–µ—Ç –∏–ª–∏ –æ–±–∞. Enter ‚Äî –≤—ã—Ö–æ–¥: ").strip().lower()
    if not inp:
        break  # –í—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ –ø–æ –ø—É—Å—Ç–æ–º—É –≤–≤–æ–¥—É

    # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–ª–∞—Å—Å –∏ –ø—Ä–µ–¥–º–µ—Ç –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –≤–≤–æ–¥–µ
    found_class = next((c for c in df["–ú–æ–π –∫–ª–∞—Å—Å"].unique() if c.lower() in inp), None)
    found_subject = next((s for s in subjects if s.lower() in inp), None)

    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ ‚Äî –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
    if found_class and found_subject:
        subject_in_class(found_class, found_subject)
    elif found_class:
        class_report(found_class)
    elif found_subject:
        subject_report(found_subject)
    else:
        print("–ù–µ –Ω–∞–π–¥–µ–Ω–æ.")  # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
