# –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ pandas –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
import pandas as pd  

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø—Ü–∏—é, —á—Ç–æ–±—ã Pandas —è–≤–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–ª –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –Ω–µ—è–≤–Ω—ã–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º —Ç–∏–ø–æ–≤
pd.set_option('future.no_silent_downcasting', True)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV-—Ñ–∞–π–ª–∞ —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –æ–ø—Ä–æ—Å –≤ DataFrame (—Ç–∞–±–ª–∏—Ü—É –¥–∞–Ω–Ω—ã—Ö)
df = pd.read_csv("–¢–µ—Å—Ç 10 –∫–ª–∞—Å—Å–æ–≤ - –û—Ç–≤–µ—Ç—ã –Ω–∞ —Ñ–æ—Ä–º—É.csv")

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–µ–±–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤ –æ–ø—Ä–æ—Å–µ
subjects = [
    "–ê–ª–≥–µ–±—Ä–∞", "–ì–µ–æ–º–µ—Ç—Ä–∏—è", "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–ò—Å—Ç–æ—Ä–∏—è",
    "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫", "–í—Ç–æ—Ä–æ–π –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–§–∏–∑–∏–∫–∞", "–•–∏–º–∏—è", "–ë–∏–æ–ª–æ–≥–∏—è",
    "–û–ë–ó–†", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞", "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ"
]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ–± —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ –≤ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (1-5)
grade_map = {
    "–Ø –≤—Å–µ–≥–¥–∞ —É—á—É—Å—å –ø–ª–æ—Ö–æ": 1, "–Ø —á–∞—â–µ –≤—Å–µ–≥–æ —É—á—É—Å—å –ø–ª–æ—Ö–æ": 2,
    "–Ø –∏–Ω–æ–≥–¥–∞ —É—á—É—Å—å —Ö–æ—Ä–æ—à–æ, –∏–Ω–æ–≥–¥–∞ –ø–ª–æ—Ö–æ": 3, "–Ø —á–∞—â–µ –≤—Å–µ–≥–æ —É—á—É—Å—å —Ö–æ—Ä–æ—à–æ": 4,
    "–Ø –≤—Å–µ–≥–¥–∞ —É—á—É—Å—å —Ö–æ—Ä–æ—à–æ": 5
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ–± –∏–Ω—Ç–µ—Ä–µ—Å–µ –∫ –ø—Ä–µ–¥–º–µ—Ç—É –≤ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (1-5)
interest_map = {
    "–ú–Ω–µ –≤—Å–µ–≥–¥–∞ —Å–∫—É—á–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 1, "–ú–Ω–µ —á–∞—â–µ –≤—Å–µ–≥–æ –±—ã–≤–∞–µ—Ç —Å–∫—É—á–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 2,
    "–ú–Ω–µ –∏–Ω–æ–≥–¥–∞ —Å–∫—É—á–Ω–æ, –∏–Ω–æ–≥–¥–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 3, "–ú–Ω–µ —á–∞—Å—Ç–æ –±—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 4,
    "–ú–Ω–µ –≤—Å–µ–≥–¥–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 5
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ –∫–æ–º—Ñ–æ—Ä—Ç–µ –Ω–∞ —É—Ä–æ–∫–µ –≤ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (1-5)
comfort_map = {
    "–Ø –≤—Å–µ–≥–¥–∞ –∏—Å–ø—ã—Ç—ã–≤–∞—é –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç –Ω–∞ —É—Ä–æ–∫–µ (—Ç—Ä–µ–≤–æ–≥—É, —Å—Ç—Ä–∞—Ö, –≥—Ä—É—Å—Ç—å)": 1,
    "–Ø —á–∞—Å—Ç–æ –∏—Å–ø—ã—Ç—ã–≤–∞—é –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç –Ω–∞ —É—Ä–æ–∫–µ (—Ç—Ä–µ–≤–æ–≥—É, —Å—Ç—Ä–∞—Ö, –≥—Ä—É—Å—Ç—å)": 2,
    "–ú–Ω–µ –∏–Ω–æ–≥–¥–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ, –∏–Ω–æ–≥–¥–∞ —è –∏—Å–ø—ã—Ç—ã–≤–∞—é –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç (—Ç—Ä–µ–≤–æ–≥—É, —Å—Ç—Ä–∞—Ö, –≥—Ä—É—Å—Ç—å)": 3,
    "–ú–Ω–µ —á–∞—â–µ –≤—Å–µ–≥–æ –±—ã–≤–∞–µ—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 4,
    "–ú–Ω–µ –≤—Å–µ–≥–¥–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –Ω–∞ —É—Ä–æ–∫–µ": 5
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–∏
def format_distribution(df_class, column, options):
    total = len(df_class)  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –∫–ª–∞—Å—Å–µ
    counts = df_class[column].value_counts()  # –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–æ–∫ —Å –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
    return [f"\"{opt}\" ‚Äî {round(counts.get(opt, 0)/total*100)}%" for opt in options]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∫–ª–∞—Å—Å–µ
def subject_in_class(cls, subject):
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∫–ª–∞—Å—Å—É (–±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞)
    df_cls = df[df["–ú–æ–π –∫–ª–∞—Å—Å"].str.lower() == cls.lower()]
    if df_cls.empty:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞
        print("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–ª–∞—Å—Å—É.")
        return

    print(f"\nüìò {subject.upper()} –≤ –∫–ª–∞—Å—Å–µ {cls}")  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤—ã–≤–æ–¥–∞

    # –ü–µ—Ä–µ–±–æ—Ä –≤—Å–µ—Ö —Ç—Ä–µ—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ (—É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å, –∏–Ω—Ç–µ—Ä–µ—Å, –∫–æ–º—Ñ–æ—Ä—Ç)
    for name, mapping in [("–ö–∞–∫ —è —É—á—É—Å—å?", grade_map), ("–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ª–∏ –º–Ω–µ —É—á–∏—Ç—å—Å—è?", interest_map), ("–ö–∞–∫ —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–∞ —É—Ä–æ–∫–µ?", comfort_map)]:
        # –ü–æ–∏—Å–∫ —Å—Ç–æ–ª–±—Ü–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –∫—Ä–∏—Ç–µ—Ä–∏—é –∏ –ø—Ä–µ–¥–º–µ—Ç—É
        col = next((c for c in df.columns if name in c and subject.lower() in c.lower()), None)
        if col:  # –ï—Å–ª–∏ —Å—Ç–æ–ª–±–µ—Ü –Ω–∞–π–¥–µ–Ω
            # –í—ã–≤–æ–¥ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤
            print(f"\n{name}:\n" + "\n".join(format_distribution(df_cls, col, mapping.keys())))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –ø–æ –≤—Å–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞–º –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–ª–∞—Å—Å–µ
def class_report(cls):
    for subj in subjects:  # –ü–µ—Ä–µ–±–æ—Ä –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        subject_in_class(cls, subj)  # –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –≤–æ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–∞—Ö
def subject_report(subj):
    for cls in df["–ú–æ–π –∫–ª–∞—Å—Å"].unique():  # –ü–µ—Ä–µ–±–æ—Ä –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
        subject_in_class(cls, subj)  # –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–æ–¥–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø–æ –≤—Å–µ–º –∫–ª–∞—Å—Å–∞–º –∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º
def main_report():
    print("===== –û–±—â–∏–π –æ—Ç—á—ë—Ç –ø–æ –≤—Å–µ–º –∫–ª–∞—Å—Å–∞–º =====")
    for cls in df["–ú–æ–π –∫–ª–∞—Å—Å"].unique():  # –ü–µ—Ä–µ–±–æ—Ä –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
        df_cls = df[df["–ú–æ–π –∫–ª–∞—Å—Å"] == cls]  # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–ª–∞—Å—Å—É
        print(f"\nüìö –ö–ª–∞—Å—Å {cls}")  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–ª–∞—Å—Å–∞

        # –ü–µ—Ä–µ–±–æ—Ä –≤—Å–µ—Ö —Ç—Ä–µ—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –æ—Ü–µ–Ω–∫–∏
        for name, mapping, title in [
            ("–ö–∞–∫ —è —É—á—É—Å—å?", grade_map, "–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏"),
            ("–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ª–∏ –º–Ω–µ —É—á–∏—Ç—å—Å—è?", interest_map, "–ò–Ω—Ç–µ—Ä–µ—Å—É"),
            ("–ö–∞–∫ —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–∞ —É—Ä–æ–∫–µ?", comfort_map, "–ö–æ–º—Ñ–æ—Ä—Ç—É")
        ]:
            # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö —Å—Ç–æ–ª–±—Ü–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏—é
            cols = [c for c in df.columns if name in c]
            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –≤ —á–∏—Å–ª–æ–≤—ã–µ –∏ —Ä–∞—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
            avg = df_cls[cols].replace(mapping).infer_objects(copy=False).apply(pd.to_numeric, errors='coerce').mean().sort_values(ascending=False)

            # –í—ã–≤–æ–¥ –¢–û–ü-3 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ —Ç–µ–∫—É—â–µ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é
            print(f"\n‚≠ê –¢–û–ü-3 –ª—É—á—à–∏—Ö –ø–æ {title}:\n" + "\n".join(avg.head(3).index.str.extract(r"\[(.*?)\]")[0]))
            # –í—ã–≤–æ–¥ –ê–ù–¢–ò-–¢–û–ü-3 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ —Ç–µ–∫—É—â–µ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é
            print(f"üîª –¢–û–ü-3 —Ö—É–¥—à–∏—Ö –ø–æ {title}:\n" + "\n".join(avg.tail(3).index.str.extract(r"\[(.*?)\]")[0]))

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
main_report()

# –¶–∏–∫–ª –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
while True:
    # –ó–∞–ø—Ä–æ—Å –≤–≤–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–ª–∞—Å—Å, –ø—Ä–µ–¥–º–µ—Ç –∏–ª–∏ –æ–±–∞)
    inp = input("\n–í–≤–µ–¥–∏—Ç–µ –∫–ª–∞—Å—Å, –ø—Ä–µ–¥–º–µ—Ç –∏–ª–∏ –æ–±–∞. Enter ‚Äî –≤—ã—Ö–æ–¥: ").strip().lower()
    if not inp:  # –ï—Å–ª–∏ –≤–≤–æ–¥ –ø—É—Å—Ç–æ–π - –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞
        break  

    # –ü–æ–∏—Å–∫ –∫–ª–∞—Å—Å–∞ –≤–æ –≤–≤–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    found_class = next((c for c in df["–ú–æ–π –∫–ª–∞—Å—Å"].unique() if c.lower() in inp), None)
    # –ü–æ–∏—Å–∫ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤–æ –≤–≤–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    found_subject = next((s for s in subjects if s.lower() in inp), None)

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏ –≤—ã–∑–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
    if found_class and found_subject:  # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã –∏ –∫–ª–∞—Å—Å –∏ –ø—Ä–µ–¥–º–µ—Ç
        subject_in_class(found_class, found_subject)
    elif found_class:  # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–æ–ª—å–∫–æ –∫–ª–∞—Å—Å
        class_report(found_class)
    elif found_subject:  # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥–º–µ—Ç
        subject_report(found_subject)
    else:  # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        print("–ù–µ –Ω–∞–π–¥–µ–Ω–æ.")